{"ast":null,"code":"import React, { useEffect, useRef } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function TripScreen() {\n  var edges = useSafeAreaInsets();\n  var startAnimation = useRef(new Animated.Value(0)).current;\n  useEffect(function () {\n    setTimeout(function () {\n      Animated.sequence([Animated.timing(startAnimation, {\n        toValue: 100,\n        useNativeDriver: true\n      })]).start();\n    }, 500);\n  }, []);\n  return _jsx(Animated.View, {\n    style: styles.containerViewHome\n  });\n}\nvar styles = {\n  imageContainer: {\n    width: 300,\n    height: 50,\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  text: {\n    color: \"black\",\n    fontSize: 11000,\n    lineHeight: 84,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    backgroundColor: \"#000000c0\"\n  },\n  containerViewHome: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  animatedView: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logoContainer: {\n    width: '100%',\n    height: '100%'\n  }\n};","map":{"version":3,"sources":["/Users/NicolasGarcia/UCN/llevApp/src/pages/Modules/Driver/tripScene.js"],"names":["React","useEffect","useRef","TripScreen","edges","useSafeAreaInsets","startAnimation","Animated","Value","current","setTimeout","sequence","timing","toValue","useNativeDriver","start","styles","containerViewHome","imageContainer","width","height","alignItems","container","flex","image","justifyContent","text","color","fontSize","lineHeight","fontWeight","textAlign","backgroundColor","position","top","bottom","left","right","animatedView","logoContainer"],"mappings":"AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,MAAxB,QAAqC,OAArC;;;;;;AAKA,eAAe,SAASC,UAAT,GAAqB;AAEhC,MAAMC,KAAK,GAAGC,iBAAiB,EAA/B;AAEA,MAAMC,cAAc,GAAGJ,MAAM,CAAE,IAAIK,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAF,CAAN,CAA+BC,OAAtD;AAEAR,EAAAA,SAAS,CAAC,YAAM;AAEZS,IAAAA,UAAU,CAAE,YAAI;AAEZH,MAAAA,QAAQ,CAACI,QAAT,CAAkB,CACdJ,QAAQ,CAACK,MAAT,CACIN,cADJ,EACmB;AACXO,QAAAA,OAAO,EAAC,GADG;AAEXC,QAAAA,eAAe,EAAC;AAFL,OADnB,CADc,CAAlB,EAOGC,KAPH;AAQH,KAVS,EAUR,GAVQ,CAAV;AAWH,GAbQ,EAaN,EAbM,CAAT;AAiBA,SACA,KAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAEC,MAAM,CAACC;AAA7B,IADA;AAKH;AACD,IAAMD,MAAM,GAAG;AACXE,EAAAA,cAAc,EAAE;AACZC,IAAAA,KAAK,EAAC,GADM;AAEZC,IAAAA,MAAM,EAAC,EAFK;AAGZC,IAAAA,UAAU,EAAE;AAHA,GADL;AAMXC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE;AADC,GANA;AASTC,EAAAA,KAAK,EAAE;AACLD,IAAAA,IAAI,EAAE,CADD;AAELE,IAAAA,cAAc,EAAE;AAFX,GATE;AAaTC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,OADH;AAEJC,IAAAA,QAAQ,EAAE,KAFN;AAGJC,IAAAA,UAAU,EAAE,EAHR;AAIJC,IAAAA,UAAU,EAAE,MAJR;AAKJC,IAAAA,SAAS,EAAE,QALP;AAMJC,IAAAA,eAAe,EAAE;AANb,GAbG;AAqBTf,EAAAA,iBAAiB,EAAC;AAChBgB,IAAAA,QAAQ,EAAC,UADO;AAEhBC,IAAAA,GAAG,EAAC,CAFY;AAGhBC,IAAAA,MAAM,EAAC,CAHS;AAIhBC,IAAAA,IAAI,EAAC,CAJW;AAKhBC,IAAAA,KAAK,EAAC;AALU,GArBT;AA4BTC,EAAAA,YAAY,EAAC;AACXf,IAAAA,IAAI,EAAC,CADM;AAEXF,IAAAA,UAAU,EAAC,QAFA;AAGXI,IAAAA,cAAc,EAAC;AAHJ,GA5BJ;AAiCTc,EAAAA,aAAa,EAAC;AACZpB,IAAAA,KAAK,EAAE,MADK;AAEZC,IAAAA,MAAM,EAAE;AAFI;AAjCL,CAAf","sourcesContent":["import React,{useEffect,useRef} from 'react';\nimport { ImageBackground,View,Image ,Animated} from 'react-native';\n\n\n\nexport default function TripScreen(){\n    //Safe area value\n    const edges = useSafeAreaInsets();\n    //Animation Values\n    const startAnimation = useRef( new Animated.Value(0)).current;\n//useEffect change animation\n    useEffect(() => {\n   \n        setTimeout( ()=>{\n       //Sequence animation\n            Animated.sequence([\n                Animated.timing(\n                    startAnimation,{\n                        toValue:100,\n                        useNativeDriver:true\n                    }\n                )\n            ]).start();\n        },500);\n    }, [])\n\n\n\n    return (\n    <Animated.View style={styles.containerViewHome} >\n    </Animated.View>\n    \n    );\n}\nconst styles =({\n    imageContainer: {\n        width:300,\n        height:50,\n        alignItems: 'center'\n    },\n    container: {\n        flex: 1,\n      },\n      image: {\n        flex: 1,\n        justifyContent: \"center\"\n      },\n      text: {\n        color: \"black\",\n        fontSize: 11000,\n        lineHeight: 84,\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        backgroundColor: \"#000000c0\"\n      },\n      containerViewHome:{\n        position:'absolute',\n        top:0,\n        bottom:0,\n        left:0,\n        right:0\n      },\n      animatedView:{\n        flex:1,\n        alignItems:'center',\n        justifyContent:'center'\n      },\n      logoContainer:{\n        width: '100%',\n        height: '100%'\n      }\n  });\n"]},"metadata":{},"sourceType":"module"}